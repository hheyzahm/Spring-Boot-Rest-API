package spring.boot.rest.API.model;

import jakarta.persistence.*;

import java.util.Objects;

/*
 * @Entity annotation specifies that this Java class is mapped to the database table.
 * */
/*
 * @Table with the help of the property name specifies which particular table this class is mapped to.
 * */
@Entity
@Table(name = "users")
public class UserModel {
    /*
     *
     * @Id on a field tells Spring Boot that this particular field is the primary key in the table.
     * @GeneratedValue specifies the strategy that will be used for generating primary keys.
     *
     * */
    /*
     * There are four primary key generation strategies as described below:
     */
    /*
    * GenerationType.AUTO - This is the default strategy used by Spring Boot.
    *                       If you use this strategy, the JPA provider will decide on an appropriate strategy
    *                       to generate the primary key depending on the dialect given in the application.
    *                       properties file.
    *
    * GenerationType.IDENTITY - this strategy uses the database identity column to determine the primary key strategy.
    *                           For example, you defined the emp_id column as auto-increment in the database while creating the employee table.
    *                           Now when you use this strategy then a unique primary key is generated by
    *                           starting from 1 and incrementing every time a new row is inserted in the table.
    * GenerationType.SEQUENCE - this strategy uses database sequence to generate the primary keys.
    * GenerationType.TABLE - this strategy uses a database table to generate primary keys.
    */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "userID")
    private int userID;
    /*
     * @Column on each Java instance variable allows defining a set of properties like name, length etc.
     * The name property will be the name of the field in the database table that this instance variable will map to.
     * */
    @Column(name = "user_Name")
    private String userName;
    @Column(name = "user_Email")
    private String userEmail;
    @Column(name = "gender")
    private String gender;

    @Column(name = "age")
    private int age;
    @Column(name = "address")
    private String address;

    public UserModel() {
    }

    public UserModel(int userID, String userName, String userEmail, String gender, int age, String address) {
        this.userID = userID;
        this.userName = userName;
        this.userEmail = userEmail;
        this.gender = gender;
        this.age = age;
        this.address = address;
    }

    public int getUserID() {
        return userID;
    }

    public void setUserID(int userID) {
        this.userID = userID;
    }

    public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {
        this.userName = userName;
    }

    public String getUserEmail() {
        return userEmail;
    }

    public void setUserEmail(String userEmail) {
        this.userEmail = userEmail;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        UserModel user = (UserModel) o;
        return userID == user.userID && age == user.age && Objects.equals(userName, user.userName) && Objects.equals(userEmail, user.userEmail) && Objects.equals(gender, user.gender) && Objects.equals(address, user.address);
    }

    @Override
    public int hashCode() {
        return Objects.hash(userID, userName, userEmail, gender, age, address);
    }
}
